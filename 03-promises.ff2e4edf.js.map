{"mappings":"iiBAIA,IAAAA,EAAAC,EAAA,SAEMC,EAAUC,SAASC,cAAc,SAMF,SAA5BC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAbPL,EAAQa,iBAAiB,UAkBH,SAAEC,GACtBA,EAAIC,iBAc4C,IAVhD,IAAIC,EAAQC,OAAOjB,EAAQK,MAAMa,OAC7BC,EAASF,OAAOjB,EAAQoB,KAAKF,OAC7BG,EAAWJ,OAAOjB,EAAQsB,OAAOJ,OAQ5BK,EAAI,EAAGA,GAAKF,EAAUE,GAAK,EAClCpB,EAAcoB,EAAGP,GACdQ,MAAK,SAAAC,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MACjBqB,EAAA5B,GAAS6B,OAAOC,QACd,uBAAwCC,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,M,IAGjDyB,OAAM,SAAAL,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MAClBqB,EAAA5B,GAAS6B,OAAOI,QACd,sBAAqCF,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,M,IAGjDW,GAASG,C","sources":["src/js/03-promises.js"],"sourcesContent":["// Напиши скрипт, який на момент сабміту форми викликає функцію createPromise(position, delay) стільки разів,\n// скільки ввели в поле amount. Під час кожного виклику передай їй номер промісу (position), що створюється,\n// і затримку, враховуючи першу затримку (delay), введену користувачем, і крок (step).\n\nimport Notiflix from 'notiflix';\n\nconst formRef = document.querySelector('.form');\n// const BtnRef = document.querySelector('.form button');\n\nformRef.addEventListener('submit', onButtonSubmit);\n\n//створення проміса : номер проміса і затримка\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n//при настисканні на кпопку\nfunction onButtonSubmit(evt) {\n  evt.preventDefault();\n\n  // const { delay, step, amount } = evt.currentTarget.elements;\n\n  let delay = Number(formRef.delay.value);\n  let stepEl = Number(formRef.step.value);\n  let amountEl = Number(formRef.amount.value);\n\n  // console.log(delayEl);\n  // console.log(stepEl);\n  // console.log(amountEl);\n\n  //перебираємо і викликаємо функцію для створення промісу\n\n  for (let i = 1; i <= amountEl; i += 1) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    delay += stepEl;\n  }\n\n  // formRef.reset();\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$formRef","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","evt","preventDefault","delay1","Number","value","stepEl","step","amountEl","amount","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.ff2e4edf.js.map"}