{"mappings":"qhBAIA,IAAAA,EAAAC,EAAA,SAQqC,SAA5BC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAfGQ,SAASC,cAAc,SAG/BC,iBAAiB,UAiBH,SAAEC,GACtBA,EAAIC,iBAEJ,MAAQZ,MAAAa,EAAKC,KAAEA,EAAIC,OAAEA,GAAWJ,EAAIK,cAAcC,SAElD,IAAIC,EAAUC,OAAON,EAAMO,OACvBC,EAASF,OAAOL,EAAKM,OACrBE,EAAWH,OAAOJ,EAAOK,OAOmB,IAA3C,IAAIG,EAAI,EAAGA,GAAKD,EAAUC,GAAK,EAClCL,GAAWG,EAEXvB,EAAcyB,EAAGL,GACdM,MAAK,EAACzB,SAAEA,EAAQC,MAAEA,MACjByB,EAAA7B,GAAS8B,OAAOC,QACd,uBAAqB5B,QAAiBC,MAAU,IAGnD4B,OAAM,EAAC7B,SAAEA,EAAQC,MAAEA,MAClByB,EAAA7B,GAAS8B,OAAOG,QACd,sBAAoB9B,QAAeC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["// Напиши скрипт, який на момент сабміту форми викликає функцію createPromise(position, delay) стільки разів,\n// скільки ввели в поле amount. Під час кожного виклику передай їй номер промісу (position), що створюється,\n// і затримку, враховуючи першу затримку (delay), введену користувачем, і крок (step).\n\nimport Notiflix from 'notiflix';\n\nconst formRef = document.querySelector('.form');\n// const BtnRef = document.querySelector('.form button');\n\nformRef.addEventListener('submit', onButtonSubmit);\n\n//створення проміса : номер проміса і затримка\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n//при настисканні на кпопку\nfunction onButtonSubmit(evt) {\n  evt.preventDefault();\n\n  const { delay, step, amount } = evt.currentTarget.elements;\n\n  let delayEl = Number(delay.value);\n  let stepEl = Number(step.value);\n  let amountEl = Number(amount.value);\n\n  // console.log(delayEl);\n  // console.log(stepEl);\n  // console.log(amountEl);\n\n  //перебираємо і викликаємо функцію для створення промісу\n  for (let i = 1; i <= amountEl; i += 1) {\n    delayEl += stepEl;\n\n    createPromise(i, delayEl)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n\n  // formRef.reset();\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","evt","preventDefault","delay1","step","amount","currentTarget","elements","delayEl","Number","value","stepEl","amountEl","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.6e7d4ad2.js.map"}