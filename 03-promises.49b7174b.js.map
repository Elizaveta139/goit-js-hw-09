{"mappings":"iiBAIA,IAAAA,EAAAC,EAAA,SAQqC,SAA5BC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IAhBSQ,SAASC,cAAc,SAG/BC,iBAAiB,UAkBH,SAAEC,GACtBA,EAAIC,iBAkB4C,IAhBhD,IAAgCC,EAAAF,EAAIG,cAAcC,SAA1CC,EAAwBH,EAAxBb,MAAOiB,EAAiBJ,EAAjBI,KAAMC,EAAWL,EAAXK,OAEjBC,EAAUC,OAAOJ,EAAMK,OACvBC,EAASF,OAAOH,EAAKI,OACrBE,EAAWH,OAAOF,EAAOG,OAYpBG,EAAI,EAAGA,GAAKD,EAAUC,GAAK,EAClC1B,EAAc0B,EAAGL,GACdM,MAAK,SAAAC,G,IAAG3B,EAAQ2B,EAAR3B,SAAUC,EAAK0B,EAAL1B,MACjB2B,EAAA/B,GAASgC,OAAOC,QACd,uBAAwCC,OAAf/B,EAAS,QAAY+B,OAAN9B,EAAM,M,IAGjD+B,OAAM,SAAAL,G,IAAG3B,EAAQ2B,EAAR3B,SAAUC,EAAK0B,EAAL1B,MAClB2B,EAAA/B,GAASgC,OAAOI,QACd,sBAAqCF,OAAf/B,EAAS,QAAY+B,OAAN9B,EAAM,M,IAGjDgB,GAASM,C","sources":["src/js/03-promises.js"],"sourcesContent":["// Напиши скрипт, який на момент сабміту форми викликає функцію createPromise(position, delay) стільки разів,\n// скільки ввели в поле amount. Під час кожного виклику передай їй номер промісу (position), що створюється,\n// і затримку, враховуючи першу затримку (delay), введену користувачем, і крок (step).\n\nimport Notiflix from 'notiflix';\n\nconst formRef = document.querySelector('.form');\n// const BtnRef = document.querySelector('.form button');\n\nformRef.addEventListener('submit', onButtonSubmit);\n\n//створення проміса : номер проміса і затримка\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n//при настисканні на кпопку\nfunction onButtonSubmit(evt) {\n  evt.preventDefault();\n\n  const { delay, step, amount } = evt.currentTarget.elements;\n\n  let delayEl = Number(delay.value);\n  let stepEl = Number(step.value);\n  let amountEl = Number(amount.value);\n\n  // let delay = Number(formRef.delay.value);\n  // let step = Number(formRef.step.value);\n  // let amount = Number(formRef.amount.value);\n\n  // console.log(delayEl);\n  // console.log(stepEl);\n  // console.log(amountEl);\n\n  //перебираємо і викликаємо функцію для створення промісу\n\n  for (let i = 1; i <= amountEl; i += 1) {\n    createPromise(i, delayEl)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    delay += stepEl;\n  }\n\n  //   // formRef.reset();\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","evt","preventDefault","_elements","currentTarget","elements","delay1","step","amount","delayEl","Number","value","stepEl","amountEl","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.49b7174b.js.map"}